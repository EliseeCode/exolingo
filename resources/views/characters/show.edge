@layout('layouts/master')

@section('content')
   
  
    <section class="hero is-fullheight">
      
      <div class="hero-body">
        <div class="container">
          <div class="columns is-centered">
              <div class="card" style="margin-top:100px;min-width:50%; text-align:center; overflow:visible;">
                <form action={{'/characters/'+character.id+'?_method=PUT'}} method="POST">
                {{ csrfField() }}
                    <div class="card-image p-3" style="margin-top:-100px;">
                        <div style="width:200px;height:200px;display:inline-block;">                      
                            @if(character.image)  
                            <img src="{{character?.image?.publicPath}}" style="border-radius: 50%;object-fit: cover;width:200px;height:200px;display:inline-block;" alt="Placeholder image for {{character?.id}}">
                            <button class="delete deleteImage is-large is-danger" data-image-id="{{character?.image?.id}}" style="z-index: 100;position: absolute;"></button>
                            @else
                            <input id="file_{{character.id}}" type="file" data-type="{{objectType.CHARACTER}}" data-id="{{character.id}}" hidden/>
                            <label for="file_{{character.id}}" class="has-text-centered button btnUpload" >Choisir une image</label>
                            @end
                        </div>
                        
                    </div>
                    <div class="card-content">
                       
                            <div class="field">
                                <div class="control">
                                    <input type="text" placeholder="Nom du personnage" class="input subtitle" name='name' style="text-align:center;" value="{{character.name}}">
                                </div>
                            </div>
                            <div class="field">    
                                <div class="control">
                                    <div class="select">
                                        <select name="gender">
                                        
                                            <option value="Male" {{character.gender=='Male'?'selected':''}}>Homme</option>
                                            <option value="Female" {{character.gender=='Female'?'selected':''}}>Femme</option>
                                            <option value="Other" {{character.gender=='Other'?'selected':''}}>Autre</option>
                                            
                                        </select>
                                    </div>  
                                </div>
                            </div>    
                            <div class="field">
                                <div class="control">
                                        <textarea name="description" placeholder="Informations sur le personnage" id="" cols="30" rows="10" class="textarea" style="resize: none">{{character.description || ""}}</textarea>
                                </div>
                            </div>    
                    
                        
                        
                           <hr>
                       
                        <div class="block">
                            @each(play in playData)
                                     <h1 class="subtitle">{{play.name}}</h1>
                                     @each(scene in play.scenes)
                                     <a href={{'/scenes/'+scene.sceneId}} class="button" style="width:300px;">{{scene.sceneName}}</a><br>
                                     @endeach
                                     <br/>          
                            @endeach
                        </div>
                    </div>
                
                    <footer class="card-footer">                    
                    <a href="#" onclick="$(this).closest('form').submit()" class="card-footer-item">Enregistrer</a>
                    </footer>
                </form>
              </div>

            </div>
        </div>
      </div>
      <div id="csrfTokenElement" data-csrf-token="{{ csrfToken }}"></div>
    </section>
  
  <script>

const CSRF_TOKEN = document.getElementById("csrfTokenElement").dataset.csrfToken;
    const deleteButtons = Array.from(document.getElementsByClassName("deleteImage"));
    const fileInputs = Array.from(document.querySelectorAll("[id^='file_']"));
    fileInputs.map((elem) => {
        elem.addEventListener("change", (e) => {
            const fileInput = e.target;
            const entityType = fileInput.getAttribute("data-type")
            const entityId = fileInput.getAttribute("data-id");
            const file = fileInput.files[0];
            console.log("entityType"+entityType);
            console.log(`Here's the entity_id to upload: ${entityId}`);
            const form = new FormData();
            const reader = new FileReader();
            reader.addEventListener('load', event => {
                const buffer = event.target.result;
                const blob = new Blob([buffer], {type: file.type});
                form.append("image", blob);
                form.append("entityId", entityId);
                form.append("entityType", entityType);
                fetch(`${window.location.origin}/images`, {
                    method: "POST",
                    headers: {
                        'X-CSRF-Token': CSRF_TOKEN,
                        /* 'Accept': `${blob.type}`, // FIXME: Not working while file transfer?
                        'Content-Type': `${blob.type}`,*/ 
                        'Content-Transfer-Encoding': 'base64'
                    },
                    mode: "cors",
                    body: form
                }).then(response => {
                    if (!response.ok) throw response;
                    return response.json();
                }).then((data) => {
                    console.info(data);
                    window.location.reload();
                }).catch((err) => {
                    console.error(err);
                })
            });
            reader.readAsArrayBuffer(file);
            
        })
    })
    deleteButtons.map((elem) => {
        elem.addEventListener("click", (e) => {
            const id = e.target.getAttribute("data-image-id");
            fetch(`${window.location.origin}/images/${id}`, {
                method: "DELETE",
                headers: {
                    "X-CSRF-Token": CSRF_TOKEN
                }
            }).then(response => {
                if (!response.ok) throw response;
                return response.json();
            }).then((data) => {
                console.info(data);
                window.location.reload()
            }).catch((err) => {
                console.error(err);
            })
        })
    })
  </script>
@endsection
@layout('layouts/master')
@section('content')
{{csrfField()}}
<div class="container has-text-centered">
<div class="columns is-full is-centered" style="-ms-zoom: 0.80; -webkit-zoom: 0.80; -moz-transform:  scale(0.80,0.80); -moz-transform-origin: center top;">
    <div class="column is-full">
        <div class="container">
            <h1 class="title">Plays</h1>
            <div class="container">
                <button class="button is-primary" onclick="addNewPlay()">Nouvelle pièce</div>
            <div class="columns is-multiline is-variable is-1-mobile is-0-tablet is-3-desktop is-8-widescreen is-2-fullhd">
                  @each((play,index) in plays)
                  <div class="column">
                    <div style="height:100%;" class="card play_item">
                        <header class="card-header">
                        <p class="card-header-title">
                            {{play.name}}
                        </p>
                        <p>par {{play.creator.username}}</p>
                        <p>le {{play.created_at}}</p>
                        </header>
                        
                        <div class="card-content">
                            <div class="content">
                                @if(play.image)
                                <div class="card-image">
                                    <div class="notification is-success p-1 m-0">
                                        <button class="delete is-large is-danger" data-image-id="{{play?.image?.id}}" style="z-index: 100;"></button>
                                        <figure class="image is-vcentered m-1">
                                            <img src="{{play?.image?.public_path}}" style="border-radius: 1%;" alt="Placeholder image for {{play?.id}}">
                                          </figure>
                                      </div>
                                  </div>
                                @else
                                <input id="file_{{play.id}}" type="file" data-type="Play" data-id="{{play.id}}" hidden/>
                                <label for="file_{{play.id}}" class="is-success has-text-centered button btnUpload is-primary is-fullwidth" >Select file</label>
                                @end
                                
                                <div class="block description mt-5">
                                {{play.description}}  
                                </div>
                                <div class="block" id="play_item_{{play.id}}">
                                    @each(scene in play.scenes)
                                    <div id="scene_item_{{scene.id}}">
                                        <div class="scene_item_display is-fullwidth">
                                                <span class="scene_name">{{scene.name}}</span>
                                                <a href={{ 'play/'+play.id+'/scene/'+scene.id }} class="button">
                                                View
                                                </a>
                                                <div class='button' onclick='toggle_scene_display({{scene.id}});'>Edit</div>
                                                <div class='button' onclick='delete_scene({{scene.id}});'>Delete</div>
                                        </div>
                                        <div class="scene_item_edit" style="display:none;">
                                            <input type="text" value="{{scene.name}}" class="input" onblur="update_scene_name({{scene.id}});toggle_scene_display({{scene.id}});" class="edit_scene_name">
                                        </div>   
                                    </div>
                                    @endeach
                                    
                                </div>
                                <div onclick="addNewScene({{play.id}})" class="button is-primary">Nouvelle Scene</div>
                            </div>
                        </div>
                    </div>
                </div>
            @else       
                <p>Pas encore de pièce de théâtre</p>  
            @endeach
            </div>        
        </div>
    </div>
 </div>
</div>
<script>
    const CSRF_TOKEN = document.getElementsByName("_csrf")[0].value;
    const deleteButtons = Array.from(document.getElementsByClassName("delete"));
    const fileInputs = Array.from(document.querySelectorAll("[id^='file_']"));
    fileInputs.map((elem) => {
        elem.addEventListener("change", (e) => {
            const fileInput = e.target;
            const entityType = fileInput.getAttribute("data-type")
            const entityId = fileInput.getAttribute("data-id");
            const file = fileInput.files[0];
            console.log(file)
            console.log(`Here's the entity_id to upload: ${entityId}`);
            const form = new FormData();
            const reader = new FileReader();
            reader.addEventListener('load', event => {
                const buffer = event.target.result;
                const blob = new Blob([buffer], {type: file.type});
                form.append("image", blob);
                form.append("entityId", entityId);
                form.append("entityType", entityType);
                fetch(`${window.location.origin}/images`, {
                    method: "POST",
                    headers: {
                        'X-CSRF-Token': CSRF_TOKEN,
                        /* 'Accept': `${blob.type}`, // FIXME: Not working while file transfer?
                        'Content-Type': `${blob.type}`,*/ 
                        'Content-Transfer-Encoding': 'base64'
                    },
                    mode: "cors",
                    body: form
                }).then(response => {
                    if (!response.ok) throw response;
                    return response.json();
                }).then((data) => {
                    console.info(data);
                    window.location.reload();
                }).catch((err) => {
                    console.error(err);
                })
            });
            reader.readAsArrayBuffer(file);
            
        })
    })
    deleteButtons.map((elem) => {
        elem.addEventListener("click", (e) => {
            const id = e.target.getAttribute("data-image-id");
            fetch(`${window.location.origin}/images/${id}`, {
                method: "DELETE",
                headers: {
                    "X-CSRF-Token": CSRF_TOKEN
                }
            }).then(response => {
                if (!response.ok) throw response;
                return response.json();
            }).then((data) => {
                console.info(data);
                window.location.reload()
            }).catch((err) => {
                console.error(err);
            })
        })
    })
    function delete_scene(scene_id)
    {
        const token = $('.csrfTokenElement').data('csrf-token');
        const params = { 
            sceneId: scene_id, 
            _csrf: token
        };
        $.post('/api/scene/delete',params,(resp)=>{
            $("#scene_item_"+scene_id).remove();
            }   
        );
    }
    function toggle_scene_display(scene_id)
    {
        $("#scene_item_"+scene_id+" .scene_item_display").toggle();
        $("#scene_item_"+scene_id+" .scene_item_edit").toggle();        
    }
    function update_scene_name(scene_id)
    {   
        const newSceneName=$("#scene_item_"+scene_id+" .scene_item_edit input").val();
        $("#scene_item_"+scene_id+" .scene_item_display .scene_name").text(newSceneName);
        const token = $('.csrfTokenElement').data('csrf-token');
        const params = { 
            newSceneName: newSceneName, 
            _csrf: token
        };
        $.post('/api/scene/'+scene_id+'/updateName',params,(resp)=>console.log(resp));
    }
    function addNewPlay(){
        $.get('/api/play/createNew',(resp)=>console.log(resp));
    }

   
    function addNewScene(play_id){
        $.get('/api/play/'+play_id+'/scene/createNew',(newScene)=>{
            console.log(newScene);
            $('#play_item_'+play_id).append(`
                            <div id="scene_item_${newScene.id}">
                                <div class="scene_item_display is-fullwidth">
                                        <span class="scene_name">${newScene.name}</span>
                                        <a href='play/${play_id}/scene/${newScene.id}' class="button">
                                        View
                                        </a>
                                        <div class='button' onclick='toggle_scene_display(${newScene.id});'>Edit</div>
                                        <div class='button' onclick='delete_scene(${newScene.id});'>Delete</div>
                                </div>
                                <div class="scene_item_edit" style="display:none;">
                                    <input type="text" value="${newScene.name}" class="input" onblur="update_scene_name(${newScene.id});toggle_scene_display(${newScene.id});" class="edit_scene_name">
                                </div>   
                            </div>`)
        });
    }
</script>
@endsection
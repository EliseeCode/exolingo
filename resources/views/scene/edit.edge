@layout('layouts/master')
@section('css')
<link rel="stylesheet" href="/css/selectize.css">
@endsection
@section('js')
<script src="/js/bulma-dropdown.js"></script>
<script src="/js/bulma-modal.js"></script>
@endsection
@section('content')
<style>
    .saved{
        background-color:#00FF8050;
    }
    
    .lineText{
        margin-bottom:3px;
        overflow:hidden;
    }
    .image-character{
    width:40px;
    height:40px;
    }
    .buttonAddLine{
        position:absolute;
        bottom:0px;
        z-index:30;
        width:100%;
        padding:5px;
        height:0;
    }
    .buttonAddLine form{height:0;}
    .buttonAddLine button{
        background-color:white;
        padding:18px 12px;
        height:36px;
        color:grey;
        line-height:0px;
        border:2px solid lightgrey;
        border-radius:50%;
        opacity:0.5;
        font-size:1em;
        transition:0.5s;
        position:relative;
        top:-14px;
        z-index:30;
    }
    .buttonAddLineFirst{
        bottom:auto;
        top:-7px;
    }
    .buttonAddLine:hover button{
        opacity:1;
    }
    .lineContainer{position:relative;}
</style>
<div class="container mt-3">
<div class="level">
    <div class="level-left">
        <div class="level-item">
            <div>
            <h1 class="title">
                {{scene.play.name}}
            </h1>
            </div>
        </div>
    </div>
    <div class="level-right">
        <div class="level-item">
            <a href=# 
                    class="icon-text js-modal-trigger" 
                    data-target="edit-scene-modal" 
                    onclick="document.getElementById(this.dataset.target).classList.add('is-active');loadSceneInfoInModal({id:{{scene.id}},name:'{{scene.name}}'})" >
                    <span class="icon fas fa-edit" >
                    </span>
                    <span>
                        Modifier
                    </span>
            </a>
           
        </div>
        <div class="level-item"></div>
    </div>
</div>    
    <h2 class="subtitle">
        <div class="select">
            <select name="scene" id="" oninput="window.location.href = '/scenes/'+this.value+'/edit';">
                @each(sceneFromPlay in scene.play.scenes)
                <option value="{{sceneFromPlay.id}}" {{sceneFromPlay.id==scene.id?'selected':''}}>{{sceneFromPlay.name}}</option>
                @endeach
            </select>
        </div>
    </h2>
    <h2 class="subtitle">
        {{scene.description}}
    </h2>
    <hr>
    <div class="lineContainer" style="text-align:center;"> 
    @if(scene.lines.length==0)
        <form action="/scenes/{{scene.id}}/line/create/-1" method="POST">
            {{ csrfField() }}
            <button type="submit" class="button" title="">Ajouter une r√©plique ici</button>
        </form>
    @else
    
        @each((line,indexLine) in scene.lines)
            @if(line.versionId==1)
                @include('partials/scenes/edit/line')
            @endif    
        @endeach
    @endif
    </div>
</div>
    <div class="csrfToken" data-csrf-token="{{ csrfToken }}"></div>
    <div id="dropdown-option-container" style="width:200px;position:absolute;"></div>
    
    @include('partials/modals/editScene')
    @include('partials/modals/createCharacter')
    <script>
        
        (function($) {
        $.fn.getCursorPosition = function() {
        var input = this.get(0);
        if (!input) return; // No (input) element found
        if ('selectionStart' in input) {
            // Standard-compliant browsers
            return input.selectionStart;
        } else if (document.selection) {
            // IE
            input.focus();
            var sel = document.selection.createRange();
            var selLen = document.selection.createRange().text.length;
            sel.moveStart('character', -input.value.length);
            return sel.text.length - selLen;
        }
    }
})(jQuery);

    function splitContent(event,elem,lineId)
    {
        if (event.ctrlKey && event.keyCode === 13) {
            let curs=$(elem).getCursorPosition();
            let text=$(elem).val()
            firstPart=text.substr(0,curs);
            secondPart=text.substr(curs);
            console.log(firstPart,secondPart);
            $(elem).val(firstPart);
            createNewLineWithTextAfterLine(secondPart,lineId);
        }
    }                      


    function toggleDropdownMenu(objectType,objectId){
        window.event.stopPropagation();
        $("#dropdown-option-container").html("");
        $("#dropdown-menu-"+objectType+"-"+objectId).clone().attr('id', 'currentDropDown').appendTo("#dropdown-option-container");
        $("#dropdown-option-container").show();
        var positionTrigger = $("#dropdown-trigger-"+objectType+"-"+objectId).offset();
        console.log(positionTrigger);
        $("#dropdown-option-container").offset({top:positionTrigger.top+20, left:positionTrigger.left-200})
    }
    $(document).mouseup(function(e) 
    {
        var container = $("#dropdown-option-container, .dropdown-trigger");
        var stuffToHide=$("#dropdown-option-container");
        // if the target of the click isn't the container nor a descendant of the container
        if (!container.is(e.target) && container.has(e.target).length === 0) 
        {
            stuffToHide.hide();
        }
    });

    function loadSceneInfoInModal(scene)
    {
        console.log(scene)
        $('#edit-scene-modal').find('input[name="name"]').val(scene.name);
        $('#edit-scene-modal').find('form').attr("action","/scenes/"+scene.id+"?_method=PUT")
    }  
    let timer = [];
    function loadCharacterInfoInModal(line)
    {
        lineId=line.lineId;
        $('#create-character-modal').find('form').attr("action","/line/"+lineId+"/characters/create");
    }
    function updateText(lineId) {
        if(timer[lineId]!=null){
        clearTimeout(timer[lineId]);
        }
        timer[lineId] = setTimeout(()=>{sendUpdateText(lineId)}, 1000);
    }

    function sendUpdateText(lineId){
        console.log("updateText")
        const text=$(`#lineText_${lineId}`).val();
        const token = $('.csrfToken').data('csrf-token');
        const params = { 
            lineId, 
            text,
            _csrf: token
        };
        $.post('/line/updateText', params, function(data) {
            console.log("updateTextData")
            if(data)
            {
                $(`#lineText_${lineId}`).addClass('saved');
                setTimeout(function(){
                    $('.saved').removeClass('saved')
                }, 500);
            }
        });
    }
    function createNewLineWithTextAfterLine(text,lineId){
        console.log("createNewLineWithTextAfterLine")
       
        const token = $('.csrfToken').data('csrf-token');
        const params = { 
            lineId, 
            text,
            _csrf: token
        };

        var form = document.createElement('form');
        form.setAttribute('method', post);
        form.setAttribute('action', '/scenes/{{scene.id}}/line/splitAText/');

        for (var key in params) {
            if (params.hasOwnProperty(key)) {
                var hiddenField = document.createElement('input');
                hiddenField.setAttribute('type', 'hidden');
                hiddenField.setAttribute('name', key);
                hiddenField.setAttribute('value', params[key]);

                form.appendChild(hiddenField);
            }
        }

        document.body.appendChild(form);
        form.submit();
    }
    function updateCharacter(characterId,lineId)
    {
        const token = $('.csrfToken').data('csrf-token');
        const params = { 
            lineId, 
            characterId,
            _csrf: token
        };

        $.post('/line/updateCharacter', params, function(data) {
            if(data)
            {
                $(`#select_character_line_${lineId}`).html("");
                characterClone=$(`#character_line_${characterId}_${lineId}`).clone();
                characterClone.appendTo(`#select_character_line_${lineId}`);
                characterClone.find('.caret').show();
            }
        });
    }
    function auto_grow(element) {
        element.style.height = "5px";
        element.style.height = (element.scrollHeight)+"px";
    }
    [...document.getElementsByClassName('lineText')].forEach((element)=>{
        auto_grow(element)
    })    

    </script>
    
    
@endsection